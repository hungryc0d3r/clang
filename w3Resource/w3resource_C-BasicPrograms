https://www.w3resource.com/c-programming-exercises/basic-declarations-and-expressions/index.php#editorr

1. Write a C program to print your name, date of birth. and mobile number.
2. Write a C program to print a block F using hash (#), where the F has a height of six characters and width of five and four characters. And also to print a big 'C'.
3. Write a C program to print the following characters in a reverse way.
4. Write a C program to compute the perimeter and area of a rectangle with a height of 7 inches. and width of 5 inches.
5. Write a C program to compute the perimeter and area of a circle with a radius of 6 inches.
6. Write a C program to display multiple variables.
   a+ c, x + c,dx + x, ((int) dx) + ax, a + x, s + b, ax + b, s + c, ax + c, ax + ux
   Declaration :
       int a = 125, b = 12345;
       long ax = 1234567890;
       short s = 4043;
       float x = 2.13459;
       double dx = 1.1415927;
       char c = 'W';
       unsigned long ux = 2541567890;
7. Write a C program to convert specified days into years, weeks and days.
   Note: Ignore leap year.
8.  Write a C program that accepts two integers from the user and calculate the sum of the two integers.
9. Write a C program that accepts two integers from the user and calculate the product of the two integers.
10. Write a C program that accepts two item’s weight (floating points' values ) and number of purchase (floating points' values) and calculate the average value of the items.
11. Write a C program that accepts an employee's ID, total worked hours of a month and the amount he received per hour. Print the employee's ID and salary (with two decimal places) of a particular month.
12. Write a C program that accepts three integers and find the maximum of three.
13. Write a C program to calculate a bike’s average consumption from the given total distance (integer value) traveled (in km) and spent fuel (in liters, float number – 2 decimal point).
14. Write a C program to calculate the distance between the two points.
15.  Write a C program to read an amount (integer value) and break the amount into smallest possible number of bank notes.
16.
17.
18.
19.
20.
